{"version":3,"file":"static/js/186.5979a5a2.chunk.js","mappings":"+PAIaA,EAAU,WACnB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAa,mCAAG,WAAML,GAAN,iGAEKM,EAAAA,EAAAA,IAAaN,GAFlB,OAEVO,EAFU,OAGhBH,EAAWG,GAHK,gDAKhBC,QAAQC,MAAR,MALgB,yDAAH,sDAajB,OAJAC,EAAAA,EAAAA,YAAU,WACRL,EAAcL,EACf,GAAE,CAACA,KAGF,wBACCG,EAAQQ,OAAS,EAClBR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASd,EAApB,EAAoBA,GAApB,OACN,2BACE,wBAAKa,KACL,0BAAOC,MAFAd,EADH,IADX,gBAUR,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import {fetchReviews} from \"services/API\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nexport const Reviews = () => {\n    const { id } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    const renderReviews = async id => {\n        try {\n          const result = await fetchReviews(id);\n          setReviews(result);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n\n      useEffect(() => {\n        renderReviews(id)\n      }, [id])\n\n      return (\n        <ul>\n        {reviews.length > 0?\n        reviews.map(({ author, content, id }) => (\n              <li key={id}>\n                <h4>{author}</h4>\n                <span>{content}</span>\n              </li>\n            ))\n        : `nothing here`}\n      </ul>\n      )\n}"],"names":["Reviews","id","useParams","useState","reviews","setReviews","renderReviews","fetchReviews","result","console","error","useEffect","length","map","author","content"],"sourceRoot":""}