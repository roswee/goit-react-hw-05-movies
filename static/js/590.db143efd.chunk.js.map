{"version":3,"file":"static/js/590.db143efd.chunk.js","mappings":"iSAGaA,EAAUC,EAAAA,GAAAA,IAAH,4HAOPC,EAAcD,EAAAA,GAAAA,IAAH,6CAIXE,EAAYF,EAAAA,GAAAA,GAAH,gGAMTG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,wIAQVK,EAAeL,EAAAA,GAAAA,IAAH,8E,SCvBZM,EAAiB,WAC5B,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAkCE,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAASF,EAASG,MAAQ,UAAY,KAE5CC,EAAAA,EAAAA,YAAU,WACRC,EAAcV,EACf,IAED,IAAMU,EAAa,mCAAG,WAAMV,GAAN,iGAEGW,EAAAA,EAAAA,IAAaX,GAFhB,OAEZY,EAFY,OAGlBR,EAAaQ,GAHK,gDAKlBC,QAAQC,IAAR,MALkB,yDAAH,sDAUjBC,EAMEZ,EANFY,aACAC,EAKEb,EALFa,aACAC,EAIEd,EAJFc,YACAC,EAGEf,EAHFe,eACAC,EAEEhB,EAFFgB,SACAC,EACEjB,EADFiB,OAGIC,EAAK,WAAsB,GAAfL,GAAmBM,QAAQ,GAAlC,KACLC,EAAO,IAAIC,KAAKT,GAAcU,cAEpC,OACE,UAAC3B,EAAD,YACE,SAACF,EAAD,CAAY8B,GAAInB,EAAhB,sBACA,UAACf,EAAD,YACE,gBACEmC,IAAG,yCAAoCV,GACvCW,IAAKV,EACLW,MAAM,WAER,UAACnC,EAAD,YACE,0BACGwB,EADH,KACqBK,EADrB,QAGA,wCAAgBF,MAEhB,sCACA,uBAAIF,KAEJ,oCACA,8BAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAQU,KAAI,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IAAYC,KAAK,eAGtC,UAACtC,EAAD,qCAEI,yBACE,SAACC,EAAD,CAAY8B,GAAG,OAAOlB,MAAOH,EAASG,MAAtC,qBAIF,yBACE,SAACZ,EAAD,CAAY8B,GAAG,UAAUlB,MAAOH,EAASG,MAAzC,2BAKN,SAAC,EAAA0B,SAAD,CAAUC,UAAU,yCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/MovieDetailsPg/MovieDetailsPg.styled.jsx","components/MovieDetailsPg/MovieDetailsPg.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Details = styled.div`\ndisplay: flex;\ncolor: white;\nbackground: linear-gradient(to right, grey , black);\nmargin: none;\n`;\n\nexport const Description = styled.div`\npadding-left: 15px;\n`\n\nexport const MovieInfo = styled.ul`\nbackground-color: rgba(0, 0, 0, 0.5);\nlist-style: none;\ncolor: white\n`\n\nexport const StyledLink = styled(NavLink)`\ntext-decoration: none;\ncolor: white;\nbox-sizing: border-box;\ntext-shadow: 3px 3px 5px white;\nwidth: 100vw;\n`\n\nexport const MovieDetails = styled.div`\nbackground: linear-gradient(to right, grey , black);\n`\n\n","import { useEffect, useState, Suspense } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { fetchDetails } from 'services/API';\nimport { Description, Details, MovieInfo, StyledLink, MovieDetails } from './MovieDetailsPg.styled';\n\nexport const MovieDetailsPg = () => {\n  const { id } = useParams();\n  const [movieById, setMovieById] = useState({});\n  const location = useLocation();\n  const bckBtn = location.state ? '/movies' : '/';\n \n  useEffect(() => {\n    renderDetails(id);\n  });\n\n  const renderDetails = async id => {\n    try {\n      const result = await fetchDetails(id);\n      setMovieById(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const {\n    release_date,\n    vote_average,\n    poster_path,\n    original_title,\n    overview,\n    genres,\n  } = movieById;\n\n  const score = `${(vote_average * 10).toFixed(0)}%`;\n  const year = new Date(release_date).getFullYear();\n\n  return (\n    <MovieDetails>\n      <StyledLink to={bckBtn}>Go back</StyledLink>\n      <Details>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={original_title}\n          width=\"300px\"\n        ></img>\n        <Description>\n          <h2>\n            {original_title} ({year})\n          </h2>\n          <p>User Score: {score}</p>\n\n          <h3>Overview</h3>\n          <p>{overview}</p>\n\n          <h4>Genres</h4>\n          <p>{genres?.map(g => g.name).join(', ')}</p>\n        </Description>\n      </Details>\n      <MovieInfo>\n          Additional Information\n          <li>\n            <StyledLink to=\"cast\" state={location.state}>\n              Cast\n            </StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\" state={location.state}>\n              Reviews\n            </StyledLink>\n          </li>\n      </MovieInfo>\n      <Suspense fallback={<div>Please wait</div>}>\n        <Outlet />\n      </Suspense>\n    </MovieDetails>\n  );\n};\n"],"names":["Details","styled","Description","MovieInfo","StyledLink","NavLink","MovieDetails","MovieDetailsPg","id","useParams","useState","movieById","setMovieById","location","useLocation","bckBtn","state","useEffect","renderDetails","fetchDetails","result","console","log","release_date","vote_average","poster_path","original_title","overview","genres","score","toFixed","year","Date","getFullYear","to","src","alt","width","map","g","name","join","Suspense","fallback"],"sourceRoot":""}